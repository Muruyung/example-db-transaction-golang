// Code generated by MockGen. DO NOT EDIT.
// Source: /home/robi/ngoding/pribadi/example-db-transaction-golang/pkg/database/interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	time "time"

	redis "github.com/go-redis/redis/v8"
	gomock "github.com/golang/mock/gomock"
)

// MockRedisTemplate is a mock of RedisTemplate interface.
type MockRedisTemplate struct {
	ctrl     *gomock.Controller
	recorder *MockRedisTemplateMockRecorder
}

// MockRedisTemplateMockRecorder is the mock recorder for MockRedisTemplate.
type MockRedisTemplateMockRecorder struct {
	mock *MockRedisTemplate
}

// NewMockRedisTemplate creates a new mock instance.
func NewMockRedisTemplate(ctrl *gomock.Controller) *MockRedisTemplate {
	mock := &MockRedisTemplate{ctrl: ctrl}
	mock.recorder = &MockRedisTemplateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRedisTemplate) EXPECT() *MockRedisTemplateMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockRedisTemplate) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockRedisTemplateMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockRedisTemplate)(nil).Close))
}

// Get mocks base method.
func (m *MockRedisTemplate) Get(ctx context.Context, key string) *redis.StringCmd {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, key)
	ret0, _ := ret[0].(*redis.StringCmd)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockRedisTemplateMockRecorder) Get(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRedisTemplate)(nil).Get), ctx, key)
}

// Set mocks base method.
func (m *MockRedisTemplate) Set(ctx context.Context, key string, value interface{}, expiration time.Duration) *redis.StatusCmd {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", ctx, key, value, expiration)
	ret0, _ := ret[0].(*redis.StatusCmd)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockRedisTemplateMockRecorder) Set(ctx, key, value, expiration interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockRedisTemplate)(nil).Set), ctx, key, value, expiration)
}
