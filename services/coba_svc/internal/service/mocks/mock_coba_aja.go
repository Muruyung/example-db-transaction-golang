// Code generated by MockGen. DO NOT EDIT.
// Source: /home/robi/ngoding/pribadi/example-db-transaction-golang/services/coba_svc/domain/usecase/query/coba_aja.go

// Package mocks is a generated GoMock package.
package mocks

import (
	entity "coba/services/coba_svc/domain/entity"
	context "context"
	reflect "reflect"

	goutils "github.com/Muruyung/go-utilities"
	gomock "github.com/golang/mock/gomock"
)

// MockCobaAjaUseCase is a mock of CobaAjaUseCase interface.
type MockCobaAjaUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockCobaAjaUseCaseMockRecorder
}

// MockCobaAjaUseCaseMockRecorder is the mock recorder for MockCobaAjaUseCase.
type MockCobaAjaUseCaseMockRecorder struct {
	mock *MockCobaAjaUseCase
}

// NewMockCobaAjaUseCase creates a new mock instance.
func NewMockCobaAjaUseCase(ctrl *gomock.Controller) *MockCobaAjaUseCase {
	mock := &MockCobaAjaUseCase{ctrl: ctrl}
	mock.recorder = &MockCobaAjaUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCobaAjaUseCase) EXPECT() *MockCobaAjaUseCaseMockRecorder {
	return m.recorder
}

// GetCobaAjaByID mocks base method.
func (m *MockCobaAjaUseCase) GetCobaAjaByID(ctx context.Context, id string) (*entity.CobaAja, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCobaAjaByID", ctx, id)
	ret0, _ := ret[0].(*entity.CobaAja)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCobaAjaByID indicates an expected call of GetCobaAjaByID.
func (mr *MockCobaAjaUseCaseMockRecorder) GetCobaAjaByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCobaAjaByID", reflect.TypeOf((*MockCobaAjaUseCase)(nil).GetCobaAjaByID), ctx, id)
}

// GetListCobaAja mocks base method.
func (m *MockCobaAjaUseCase) GetListCobaAja(ctx context.Context, request *goutils.RequestOption) ([]*entity.CobaAja, *goutils.MetaResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetListCobaAja", ctx, request)
	ret0, _ := ret[0].([]*entity.CobaAja)
	ret1, _ := ret[1].(*goutils.MetaResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetListCobaAja indicates an expected call of GetListCobaAja.
func (mr *MockCobaAjaUseCaseMockRecorder) GetListCobaAja(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListCobaAja", reflect.TypeOf((*MockCobaAjaUseCase)(nil).GetListCobaAja), ctx, request)
}
