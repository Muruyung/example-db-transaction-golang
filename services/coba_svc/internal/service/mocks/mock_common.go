// Code generated by MockGen. DO NOT EDIT.
// Source: /home/robi/ngoding/pribadi/example-db-transaction-golang/services/coba_svc/domain/service/common.go

// Package mocks is a generated GoMock package.
package mocks

import (
	service "coba/services/coba_svc/domain/service"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSvcTx is a mock of SvcTx interface.
type MockSvcTx struct {
	ctrl     *gomock.Controller
	recorder *MockSvcTxMockRecorder
}

// MockSvcTxMockRecorder is the mock recorder for MockSvcTx.
type MockSvcTxMockRecorder struct {
	mock *MockSvcTx
}

// NewMockSvcTx creates a new mock instance.
func NewMockSvcTx(ctrl *gomock.Controller) *MockSvcTx {
	mock := &MockSvcTx{ctrl: ctrl}
	mock.recorder = &MockSvcTxMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSvcTx) EXPECT() *MockSvcTxMockRecorder {
	return m.recorder
}

// BeginTx mocks base method.
func (m *MockSvcTx) BeginTx(ctx context.Context, operation func(context.Context, *service.Wrapper) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BeginTx", ctx, operation)
	ret0, _ := ret[0].(error)
	return ret0
}

// BeginTx indicates an expected call of BeginTx.
func (mr *MockSvcTxMockRecorder) BeginTx(ctx, operation interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BeginTx", reflect.TypeOf((*MockSvcTx)(nil).BeginTx), ctx, operation)
}
